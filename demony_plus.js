const five = require("johnny-five");

// --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
const BPM = 100; // —Ç—ã –º–æ–∂–µ—à—å –º–µ–Ω—è—Ç—å —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ
const BEAT_MS = (60 / BPM) * 1000; // –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–µ—Ç–≤–µ—Ä—Ç–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

// --- –ü—Ä–æ–≥—Ä–µ—Å—Å–∏—è ---
const chordsFull = [
    ["C", "Am", "Em", "G"],
    ["C", "Am", "Em", "G", null],
    ["C", "Am", "Em", "G"],
    ["C", "Am", "Em", "G"],
    ["C", "Am", "Em", "G"],
    ["C", "Am", "Em", "G"],
];

// --- –ú–∞–ø–ø–∏–Ω–≥ –∞–∫–∫–æ—Ä–¥–æ–≤ –Ω–∞ –Ω–æ—Ç—ã ---
const chordMap = {
    C:  ["C5", "E5", "G5"],
    Am: ["A4", "C5", "E5"],
    Em: ["E4", "G4", "B4"],
    G:  ["G4", "B4", "D5"],
};

// --- –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ---
function createMelody(chords, bpm = 120) {
    const beat = (60 / bpm) * 1000; // —á–µ—Ç–≤–µ—Ä—Ç–Ω–∞—è –Ω–æ—Ç–∞ (–º—Å)
    const durationRatios = [1, 0.5, 0.25, 2]; // —á–µ—Ç–≤–µ—Ä—Ç–Ω–∞—è, –≤–æ—Å—å–º–∞—è, —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–∞—è, –ø–æ–ª–æ–≤–∏–Ω–Ω–∞—è
    const melody = [];

    for (const bar of chords) {
        for (const ch of bar) {
            if (!ch) {
                melody.push([null, beat]); // –ø–∞—É–∑–∞ –¥–ª–∏–Ω–æ–π –≤ 1 beat
                continue;
            }

            const notes = chordMap[ch];
            const note = notes[Math.floor(Math.random() * notes.length)];

            // —Å–ª—É—á–∞–π–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –Ω–æ —Ä–µ–∞–ª—å–Ω–∞—è, –æ—Ç bpm
            const ratio = durationRatios[Math.floor(Math.random() * durationRatios.length)];
            const duration = beat * ratio;

            melody.push([note, duration]);
        }
    }

    return melody;
}

// --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ---
const melody = createMelody(chordsFull, BPM);
console.table(melody);


new five.Board().on("ready", function () {
    const board = this;
    const piezo  = new five.Piezo(3);
    const button = new five.Button({ pin: 2, isPullup: true });

    // test the melody only with piezo
    const melody = createMelody(chordsFull, BPM);

    // play the melody
    let i = 0;

    function playNext() {
        if (i >= melody.length) {
            console.log("üéµ Melody finished");
            return;
        }

        const [note, duration] = melody[i++];
        console.log(`Playing: ${note ?? "pause"} (${duration} ms)`);

        if (note) {
            const freq = five.Piezo.Notes[note.toLowerCase()];
            piezo.frequency(freq, duration);
        }

        board.wait(duration + 50, playNext); // +50 –º—Å –ø–∞—É–∑–∞ –º–µ–∂–¥—É –Ω–æ—Ç–∞–º–∏
    }

    playNext();

})